#_______________________________________________________________________________________________________DST_EVENT__
#
# kaedama.py --rule DST_EVENT --config examples/sPHENIX/DST_EVENT_aua23.yaml --runs ...
#
MBD_CALIBRATION:
   params:
     name:       DST_MBD_CALIBRATION_run2pp
     build:      new
     build_name: new
     dbtag:      2024p001
     logbase :   $(name)_$(build)_$(tag)-$INT(run,%08d)-$INT(seg,%04d)
     outbase :   $(name)_$(build)_$(tag)
     script  :   run.sh
     payload :   ./slurp-examples/sPHENIX/mbd_calib/
     mem     :   2048MB
     nevents:    20000
     neventsper: 20000
     pass0dir: /sphenix/user/chiu/sphenix_bbc/CDB/PASS0/

   input:
      db: daqdb
      direct_path: /sphenix/lustre01/sphnxpro/{mode}/mbd/beam
      query: |-
         select 
                'daqdb/filelist'                                                                                    as source      , 
                runnumber                                                                                                          , 
                0                                                                                                   as segment     , 
                string_agg( distinct split_part(filename,'/',-1), ' ' )                                             as files       ,   
                string_agg( distinct split_part(filename,'/',-1) || ':' || firstevent || ':' || lastevent, ' ' )    as fileranges  
         from  
                filelist
         where 
           ( 
             (filename  like '/bbox%/%mbd%beam%'         and lastevent>2 ) or
             (filename  like '/bbox%/%mbd%physics%'      and lastevent>2 )
           )
           {run_condition}

         group by runnumber

         having
                every(transferred_to_sdcc)   and
                max(lastevent)>1000     

         order by runnumber
                {limit_condition}

              ;              

   # TODO:  Need to add error checking to make sure that outdir, logdir, etc... are quoted properly.  Else, this will cause problems with argument substitution
   filesystem:  
     outdir : "/sphenix/lustre01/sphnxpro/physics/TEST/mbdcalib/run_$(rungroup)"
     logdir : "file:///sphenix/data/data02/sphnxpro/mbdcalib/run_$(rungroup)"
     condor :        "/tmp/mbdcalib/run_$(rungroup)"


   #
   # Again I note the need to ensure that the arguments are properly specified given the
   # definition of the payload script.
   #
   job:
     executable            : "{payload}/run.sh"
     arguments             : "$(nevents) {outbase} {logbase} $(run) $(seg) {outdir} $(build) $(tag) $(inputs) $(ranges) {neventsper} {logdir} {pass0dir}"
     output_destination    : '{logdir}'
     transfer_input_files  : "{payload},cups.py,odbc.ini"
     output                : '{logbase}.condor.stdout'
     error                 : '{logbase}.condor.stderr'
     log                   : '{condor}/{logbase}.condor'
     accounting_group      : "group_sphenix.mdc2"
     accounting_group_user : "sphnxpro"
     transfer_output_files : ""
     priority : '3800'

